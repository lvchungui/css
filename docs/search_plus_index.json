{"./":{"url":"./","title":"1 CSS 简介","keywords":"","body":"1 CSS简介 1.1 CSS 介绍 CSS 是层叠样式表 ( Cascading Style Sheets ) 的简称，有时我们也会称之为 CSS 样式表或级联样式表 CSS 是也是一种标记语言 CSS 主要用于设置 HTML 页面中的文本内容（字体、大小、对齐方式等）、图片的外形（宽高、边框样式、边距等）以及版面的布局和外观显示样式 CSS写在哪里？ css写在style标签中，style标签一般写在head标签里面，title标签下面（这是CSS的其中一种写法，后续还会讲其他写法） 注意点： CSS 标点符号都是英文状态下的 每一个样式键值对写完之后，最后需要写分号 1.2 CSS 引入方式 内嵌式：CSS 写在style标签中，style标签虽然可以写在页面任意位置，但是通常约定写在 head 标签中 外联式：CSS 写在一个单独的.css文件中，需要通过link标签在网页中引入 行内式：CSS 写在标签的style属性中，之后会配合js使用 CSS常见三种引入方式的特点区别有哪些（书写位置、作用范围、使用场景） ？ 引入方式 书写位置 作用范围 使用场景 内嵌式 CSS写在style标签中 当前页面 小案例 外联式 CSS写在单独的css文件中，通过link标签引入 多个页面 项目中 行内式 CSS写在标签的style属性中 当前标签 配合js使用 "},"article/2-CSS基础选择器.html":{"url":"article/2-CSS基础选择器.html","title":"2 CSS 基础选择器","keywords":"","body":"2 CSS基础选择器 2.1 标签选择器 选择器的作用：选择页面中对应的标签，方便后续设置样式 结构：标签名 { css属性名：属性值； } 作用：通过标签名，找到页面中所有这类标签，设置样式 注意点： 标签选择器选择的是一类标签，而不是单独某一个 标签选择器无论嵌套关系有多深，都能找到对应的标签 2.2 类选择器 结构：.类名 { css属性名：属性值； } 作用：通过类名，找到页面中所有带有这个类名的标签，设置样式 注意点： 所有标签上都有class属性，class属性的属性值称为类名（类似于名字） 类名可以由数字、字母、下划线、中划线组成，但不能以数字或者中划线开头 一个标签可以同时有多个类名，类名之间以空格隔开 类名可以被重复使用，一个类选择器可以同时选中多个标签 2.3 id选择器 结构：#id属性值 { css属性名：属性值； } 作用：通过id属性值，找到页面中带有这个id属性值的标签，设置样式 注意点： 所有标签上都有id属性 id属性值类似于身份证号码，在一个页面中是唯一的，不可重复的！ 一个标签上只能有一个id属性值 一个id选择器只能选中一个标签 类与id的区别 class类名与id属性值的区别 class类名相当于姓名，可以重复，一个标签可以同时有多个class类名 id属性值相当于身份证号码，不可重复，一个标签只能有一个id属性值 类选择器与id选择器的区别 类选择器以 . 开头 id选择器以 # 开头 实际开发的情况 类选择器用的最多 id一般配合js使用，除非特殊情况，否则不要使用id设置样式 实际开发中会遇到冗余代码的抽取 （可以将一些公共的代码抽取到一个公共的类中去） 2.4 通配符选择器 结构：* { css属性名：属性值； } 作用：找到页面中所有的标签，设置样式 注意点： 开发中使用极少，只会在极特殊情况下才会用到 在小页面中可能会用于去除标签默认的margin和padding（后续讲解） *{ margin: 0; padding: 0; } "},"article/3-CSS字体属性.html":{"url":"article/3-CSS字体属性.html","title":"3 CSS 字体属性","keywords":"","body":"3 CSS字体属性 3.1 字体大小：font-size 属性名：font-size 取值：数字 + px 注意点： 谷歌浏览器默认文字大小是16px 单位需要设置，否则无效 3.2 字体粗细：font-weight 属性名：font-weight 取值： 关键字： 正常：normal 加粗：bold 纯数字：100~900的整百数： 正常：400 加粗：700 注意点： 不是所有字体都提供了九种粗细，因此部分取值页面中无变化 实际开发中以：正常、加粗两种取值使用最多，以数字作为取值较多 3.3 字体样式：font-style 属性名：font-style 取值： 正常（默认值）：normal 倾斜：italic 3.4 字体类型：font-family 属性名：font-family 常见取值：具体字体1,具体字体2,具体字体3,具体字体4,...,字体系列 具体字体：\"Microsoft YaHei\"、微软雅黑、黑体、宋体、楷体等...... 字体系列：sans-serif、serif、monospace等...... 渲染规则： 从左往右按照顺序查找，如果电脑中未安装该字体，则显示下一个字体 如果都不支持，此时会根据操作系统，显示最后字体系列的默认字体 注意点： 如果字体名称中存在多个单词，推荐使用引号包裹 最后一项字体系列不需要引号包裹 网页开发时，尽量使用系统常见自带字体，保证不同用户浏览网页都可以正确显示 常见字体系列 无衬线字体（sans-serif） 特点：文字笔画粗细均匀，并且首尾无装饰 场景：网页中大多采用无衬线字体 常见该系列字体：黑体、Arial 衬线字体（serif） 特点：文字笔画粗细不均，并且首尾有笔锋装饰 场景：报刊书籍中应用广泛 常见该系列字体：宋体、Times New Roman 等宽字体（monospace） 特点：每个字母或文字的宽度相等 场景：一般用于程序代码编写，有利于代码的阅读和编写 常见该系列字体：Consolas、fira code 3.5 font 属性连写 属性名：font (复合属性) 取值：font : style weight size family; 省略要求：只能省略前两个，如果省略了相当于设置了默认值 "},"article/4-CSS文本属性.html":{"url":"article/4-CSS文本属性.html","title":"4 CSS 文本属性","keywords":"","body":"4 CSS文本属性 4.1 文本颜色：color 属性名：color 属性值： 颜色表示方式 表示含义 属性值 关键词 预定义的颜色名 red、green、blue、yellow..... rgb表示法 红绿蓝三原色，每项取值范围:0~255 rgb(0,0,0)、rgb(255,255,255)、rgb(255,0,0..... rgba表示法 红绿蓝三原色+a表示透明度，取值范围是0~1 rgba(255,255,255,0.5)、rgba(255,0,0,0.3)... 十六进制表示法 #开头,将数字转换成十六进制表示 #000000、#ff0000、#e92322，简写:#000、#f00 4.2 文本缩进：text-indent 属性名：text-indent 取值： 数字+px 数字+em（推荐：1em = 当前标签的font-size的大小） 4.3 文本对齐：text-align 属性名：text-align 取值： 属性值 效果 left 左对齐 center 居中对齐 right 右对齐 text-align : center 能让哪些元素水平居中？ 文本 span标签、a标签 input标签、img标签 4.4 文本修饰：text-decoration 属性名：text-decoration 取值： 属性值 效果 underline 下划线（常用) line-through 删除线(不常用) overline 上划线（几乎不用) none 无装饰线（常用) 注意点：开发中会使用text-decoration : none;清除a标签默认的下划线 4.5 行高：line-height 作用：控制一行的上下行间距 属性名：line-height 取值： 数字+px 倍数（当前标签font-size的倍数） 应用： 让单行文本垂直居中可以设置 line-height : 文字父元素高度 网页精准布局时，会设置 line-height : 1 可以取消上下间距 行高与font连写的注意点： 如果同时设置了行高和font连写，注意覆盖问题 font : style weight size/line-height family ; 单行文字垂直居中 单行文字垂直居中的原理 简单理解: 行高的上空隙和下空隙把文字挤到中间了，如果行高小于盒子高度，文字会偏上；如果行高大于盒子高度，则文字偏下 "},"article/5-CSS复合选择器.html":{"url":"article/5-CSS复合选择器.html","title":"5 CSS 复合选择器","keywords":"","body":"5 CSS 复合选择器   复合选择器可以更准确、更高效的选择目标元素（标签），复合选择器是由两个或多个基础选择器，通过不同的方式组合而成的，常用的复合选择器包括：后代选择器、子选择器、并集选择器、伪类选择器等等 5.1 后代选择器 作用：根据 HTML 标签的嵌套关系，选择父元素后代中满足条件的元素 选择器语法：选择器1 选择器2 { css } 结果：在选择器1中找到为选择器2的后代标签，设置样式 注意点： 后代包括：儿子、孙子、重孙子...... 后代选择器中，选择器与选择器之前通过空格隔开 5.2 子代选择器 作用：根据 HTML 标签的嵌套关系，选择父元素子代中满足条件的元素 选择器语法：选择器1 > 选择器2 { css } 结果：在选择器1中找到为选择器2的子代标签，设置样式 注意点： 子代只包括：儿子 子代选择器中，选择器与选择器之前通过 > 隔开 5.3 并集选择器 作用：同时选择多组标签，设置相同的样式 选择器语法：选择器1，选择器2 { css } 结果：找到选择器1和选择器2选中的标签，设置样式 注意点： 并集选择器中的每组选择器之间通过 , 分隔 并集选择器中的每组选择器可以是基础选择器或者复合选择器 并集选择器中的每组选择器通常一行写一个，提高代码的可读性 5.4 交集选择器 作用：选中页面中同时满足多个选择器的标签 选择器语法：选择器1选择器2 { css } 结果：（既又原则）找到页面中既能被选择器1选中，又能被选择器2选中的标签，设置样式 注意点： 交集选择器中的选择器之间是紧挨着的，没有东西分隔 交集选择器中如果有标签选择器，标签选择器必须写在最前面 5.5 属性选择器 场景：通过元素上的HTML属性来选择元素，常用于选择 input 标签 选择器语法： 语法 功能 E[attr]{ } 选择具有attr属性的E元素 E[attr=\"val\"]{ } 选择具有attr属性并且属性值等于val的E元素 5.6 伪类选择器 伪类选择器用于向某些选择器添加特殊的效果，比如给链接添加特殊效果，或选择第1个，第n个元素 伪类选择器书写最大的特点是用冒号（:）表示，比如 :hover 、 :first-child 5.6.1 hover伪类选择器 作用：选中鼠标悬停在元素上的状态，设置样式 选择器语法：选择器:hover { css } /* 悬停的时候文字颜色是红色 */ a:hover { color: red; background-color: green; } /* 用户鼠标悬停到div的时候, 文字是绿色 */ div:hover { color: green; } 5.6.2 结构伪类选择器 作用与优势： 作用：根据元素在HTML中的结构关系查找元素 优势：减少对于HTML中类的依赖，有利于保持代码整洁 场景：常用于查找某父级选择器中的子元素 选择器 选择器 说明 E:first-child{} 匹配父元素中第一个子元素，并且是E元素 E:last-child{} 匹配父元素中最后一个子元素，并且是E元素 E:nth-child(n){} 匹配父元素中第n个子元素，并且是E元素 E:nth-last-child(n){} 匹配父元素中倒数第n个子元素，并且是E元素 n的注意点： n为：0、1、2、3、4、5、6、...... 通过n可以组成常见公式 功能 公式 偶数 2n、even 奇数 2n+1、2n-1、odd 找到前5个 -n+5 找到从第5个往后 n+5 5.6.2 链接伪类选择器 场景：常用于选中超链接的不同状态 选择器语法： 选择器语法 功能 a:link{ } a链接未访问过的状态 a:visited{ } a链接访问之后的状态 a:hover{ } 鼠标悬停的状态 a:active{ } 鼠标按下的状态 注意点： 如果需要同时实现以上四种伪类状态效果，需要按照 LVHA 顺序书写 其中 :hover伪类选择器 使用更为频繁，常用于选择各类元素的悬停状态 5.6.3 焦点伪类选择器 场景：用于选中元素获取焦点时状态，常用于表单控件 选择器语法：input:focus{ } 效果：表单控件获取焦点时默认会显示外部轮廓线 "},"article/6-CSS元素显示模式.html":{"url":"article/6-CSS元素显示模式.html","title":"6 CSS 元素显示模式","keywords":"","body":"6 CSS 元素显示模式   元素显示模式就是元素（标签）以什么方式进行显示，比如自己占一行，比如一行可以放多个。网页的标签非常多，在不同地方会用到不同类型的标签，了解他们的特点可以更好的布局我们的网页 6.1 块级元素 显示特点： 独占一行（一行只能显示一个） 宽度默认是父元素的宽度，高度默认由内容撑开 可以设置宽高 是一个容器及盒子，里面可以放行内或者块级元素 代表标签：div、p、h系列、ul、li、dl、dt、dd、form、header、nav、footer..... 注意： 文字类的元素内不能使用块级元素 标签主要用于存放文字，因此 里面不能放块级元素，特别是不能放 同理， ~等都是文字类块级标签，里面也不能放其他块级元素 6.2 行内元素 显示特点： 一行可以显示多个 宽度和高度默认由内容撑开 不可以设置宽高 代表标签：a、span 、b、u、i、s、strong、ins、em、del...... 6.3 行内块元素 显示特点： 一行可以显示多个 可以设置宽高 代表标签： input、textarea、button、select...... 特殊情况：img标签有行内块元素特点，但是Chrome调试工具中显示结果是inline 6.4 元素显示模式转换 目的：改变元素默认的显示特点，让元素符合布局要求 语法： 属性 效果 使用频率 display:block 转换成块级元素 较多 display:inline-block 转换成行内块元素 较多 display:inline 转换成行内元素 极少 "},"article/7-CSS背景.html":{"url":"article/7-CSS背景.html","title":"7 CSS 背景","keywords":"","body":"7 CSS 背景 7.1 背景颜色 属性名：background-color（bgc） 属性值：关键字、rgb表示法、rgba表示法、十六进制...... 注意点： 背景颜色默认值是透明： rgba(0,0,0,0) 、transparent，我们也可以手动指定背景颜色为透明色background-color:transparent; 背景颜色不会影响盒子大小，并且还能看清盒子的大小和位置，一般在布局中会习惯先给盒子设置背景颜色 7.2 背景图片 属性名：background-image（bgi） 属性值：background-image: url(图片的路径); 注意点： 背景图片中url中可以省略引号 背景图片默认是在水平和垂直方向平铺的 背景图片仅仅是指给盒子起到装饰效果，类似于背景颜色，是不能撑开盒子的 7.3 背景平铺 属性名：background-repeat（bgr） 属性值： 取值 效果 repeat (默认值)水平和垂直方向都平铺 no-repeat 不平铺 repeat-x 沿着水平方向(x轴)平铺 repeat-y 沿着垂直方向(y轴）平铺 7.4 背景位置 属性名：background-position（bgp） background-position: x y; 参数代表的意思是：x 坐标和 y 坐标。 可以使用 方位名词 或者 精确单位 注意点： 参数是方位名词 如果指定的两个值都是方位名词，则两个值前后顺序无关，比如 left top 和 top left 效果一致 如果只指定了一个方位名词，另一个值省略，则第二个值默认居中对齐 参数是精确单位 如果参数值是精确坐标，那么第一个肯定是 x 坐标，第二个一定是 y 坐标 如果只指定一个数值，那该数值一定是 x 坐标，另一个默认垂直居中 参数是混合单位 如果指定的两个值是精确单位和方位名词混合使用，则第一个值是 x 坐标，第二个值是 y 坐标 7.5 背景图像固定（背景附着） background-attachment 属性设置背景图像是否固定或者随着页面的其余部分滚动 background-attachment 后期可以制作视差滚动的效果 background-attachment : scroll / fixed; 属性值： scroll：背景图像是随对象内容滚动 fixed：背景图像固定 7.6 背景相关属性连写 属性名：background（bg） 属性值：单个属性值的合写，取值之间以空格隔开 书写顺序：背景颜色 背景图片地址 背景平铺 背景图像滚动 背景图片位置 background: red url(image.jpg) repeat-y fixed top ; 省略问题： 可以按照需求省略 特殊情况：在pc端，如果盒子大小和背景图片大小一样，此时可以直接写 background：url() "},"article/8-CSS三大特性.html":{"url":"article/8-CSS三大特性.html","title":"8 CSS 三大特性","keywords":"","body":"8 CSS三大特性 8.1 层叠性 问题：给同一个标签设置了相同的样式，此时浏览器会如何渲染呢？ 结果：如果给同一个标签设置了相同的属性，此时样式会层叠（覆盖），写在最下面的会生效 TIP： CSS （Cascading style sheets） 层叠样式表 所谓的层叠即叠加的意思，表示样式可以一层一层的层叠覆盖 当样式冲突时，只有当选择器优先级相同时，才能通过层叠性判断结果 8.2 继承性 特性：子元素有默认继承父元素样式的特点（子承父业） 可以继承的常见属性(文字控制属性都可以继承) color font-style、font-weight、font-size、font-family text-indent、text-align line-height ...... 注意点：可以通过调试工具判断样式是否可以继承 继承的应用 好处：可以在一定程度上减少代码 常见应用场景： 可以直接给ul设置 list-style:none 属性，从而去除列表默认的小圆点样式 直接给body标签设置统一的font-size，从而统一不同浏览器默认文字大小 继承失效的特殊情况 如果元素有浏览器默认样式，此时继承性依然存在，但是优先显示浏览器的默认样式 a标签的color会继承失效，其实color属性继承下来了，但是被浏览器默认设置的样式给覆盖掉了 h系列标签的font-size会继承失效，其实font-size属性继承下来了，但是被浏览器默认设置的样式给覆盖掉了 8.3 优先级 特性：不同选择器具有不同的优先级，优先级高的选择器样式会覆盖优先级低选择器样式 优先级公式：继承 注意点： !important写在属性值的后面，分号的前面 !important不能提升继承的优先级，只要是继承优先级最低 实际开发中不建议使用 !important 权重叠加计算 场景：如果是复合选择器，此时需要通过权重叠加计算方法，判断最终哪个选择器优先级最高会生效 权重叠加计算公式：（每一级之间不存在进位） 比较规则： 先比较第一级数字，如果比较出来了，之后的统统不看 如果第一级数字相同，此时再去比较第二级数字，如果比较出来了，之后的统统不看 ...... 如果最终所有数字都相同，表示优先级相同，则比较层叠性（谁写在下面，谁说了算!） 注意点：!important如果不是继承，则权重最高，天下第一 第1题：普通题 /* (行内, id, 类, 标签) */ /* (0, 2, 0, 0) */ #father #son { color:blue; } /* (0, 1, 1, 1) */ #father p.c2 { color:black; } /* (0, 0, 2, 2) */ div.c1 p.c2 { color:red; } /* 继承, !important不能提升继承的优先级，只要是继承优先级最低*/ #father { color:green !important; } /* 继承, 最低 */ div#father.c1 { color: yellow ; } 这行文本是什么颜色的？ "},"article/9-CSS盒子模型.html":{"url":"article/9-CSS盒子模型.html","title":"9 CSS 盒子模型","keywords":"","body":"9 CSS盒子模型 9.1 盒子模型的介绍 盒子的概念 页面中的每一个标签，都可看做是一个 “盒子”，通过盒子的视角更方便的进行布局 浏览器在渲染（显示）网页时，会将网页中的元素看做是一个个的矩形区域，我们也形象的称之为 盒子 盒子模型 CSS 中规定每个盒子分别由：内容区域（content）、内边距区域（padding）、边框区域（border）、外边距区域（margin）构成，这就是盒子模型 9.2 内容区域 作用：利用 width 和 height 属性默认设置是盒子内容区域的大小 属性：width / height 常见取值：数字+px 9.3 边框（ border ） 作用：给设置边框粗细、边框样式、边框颜色效果 单个属性： 作用 属性名 属性值 边框粗细 border-width 数字+px 边框样式 border-style 实线solid、虚线dashed 、点线dotted 边框颜色 border-color 颜色取值 边框（border）- 连写形式 属性名：border 属性值：单个取值的连写，取值之间以空格隔开，如：border : 10px solid red; 快捷键：bd + 回车 边框（border）- 单方向设置 场景：只给盒子的某个方向单独设置边框 属性名：border - 方位名词 属性值：数字 + px 9.4 内边距（ padding ） 作用：设置 边框 与 内容区域 之间的距离 属性名：padding 常见取值： 取值 示例 含义 一个值 padding:10px; 上右下左都设置为10px 两个值 padding:10px 20px; 上下设置为10px、左右设置为20px 三个值 padding:10px 20px 30px; 上设置为10px、左右设置为20px、下设置为30px 四个值 padding:10px 20px 30px 40px; 上设置为10px、右设置为20px、下设置为30px、左设置为40px 记忆规则：从上开始赋值，然后顺时针赋值，如果设置赋值的，看对面的！！ 内边距（padding）- 单方向设置 场景：只给盒子的某个方向单独设置内边距 属性名：padding - 方位名词 属性值：数字 + px 盒子实际大小计算 盒子宽度 = 左边框 + 左padding + 内容宽度 + 右padding + 右边框 盒子高度 = 上边框 + 上padding + 内容宽度 + 下padding + 下边框 给盒子设置border或padding时，盒子会被撑大，如果不想盒子被撑大？ 操作：给盒子设置属性box-sizing : border-box ;即可 优点：浏览器会自动计算多余大小，自动在内容中减去 9.5 外边距（margin） 作用：设置边框以外，盒子与盒子之间的距离 属性名：margin 常见取值： 取值 示例 含义 一个值 margin:10px; 上右下左都设置为10px 两个值 margin:10px 20px; 上下设置为10px、左右设置为20px 三个值 margin:10px 20px 30px; 上设置为10px、左右设置为20px、下设置为30px 四个值 margin:10px 20px 30px 40px; 上设置为10px、右设置为20px、下设置为30px、左设置为40px 记忆规则：从上开始赋值，然后顺时针赋值，如果设置赋值的，看对面的！！ 外边距（margin） - 单方向设置 场景：只给盒子的某个方向单独设置外边距 属性名：margin - 方位名词 属性值：数字 + px 方向 属性 效果 水平方向 margin-left 让当前盒子往右移动 水平方向 margin-right 让右边的盒子往右移动 垂直方向 margin-top 往当前盒子往下移动 垂直方向 margin-bottom 让下面的盒子往下移动 外边距典型应用 - 块级盒子水平居中 写法：margin: 0 auto; 行内元素或者行内块元素水平居中给其父元素添加text-align:center 即可 清除默认内外边距 场景：浏览器会默认给部分标签设置默认的margin和padding，但一般在项目开始前需要先清除这些标签默认的margin和padding，后续自己设置 解决方法： *{ margin: 0; padding: 0; } 外边距折叠现象① – 合并现象 场景：垂直布局的块级元素，上下的margin会合并 结果：最终两者距离为margin的最大值 解决方法：只给其中一个盒子设置margin即可 外边距折叠现象② – 塌陷现象 场景：互相嵌套的块级元素，子元素的 margin-top 会作用在父元素上 结果：导致父元素一起往下移动 解决方法： 给父元素设置overflow：hidden 子元素转换成行内块元素 设置浮动 行内元素的margin和padding无效情况 场景：给行内元素设置margin和padding时 结果： 水平方向的margin和padding布局中有效！ 垂直方向的margin和padding布局中无效！ "},"article/10-CSS伪元素.html":{"url":"article/10-CSS伪元素.html","title":"10 CSS 伪元素","keywords":"","body":"10 CSS 伪元素 伪元素：一般页面中的非主体内容可以使用伪元素 伪元素与元素的区别： 元素：HTML 设置的标签 伪元素：由 CSS 模拟出的标签效果 种类： 伪元素 作用 ::before 在父元素内容的最前添加一个伪元素 ::after 在父元素内容的最后添加一个伪元素 注意点： 必须设置content属性才能生效 伪元素默认是行内元素 "},"article/11-CSS布局.html":{"url":"article/11-CSS布局.html","title":"11 CSS 布局","keywords":"","body":"11 CSS 布局   网页布局的本质——用 CSS 来摆放盒子，把盒子摆放到相应位置，简单说，就是盒子如何进行排列顺序。CSS提供了三种传统布局方式：普通流（标准流）丶浮动和定位 11.1 标准流 标准流：又称文档流，是浏览器在渲染显示网页内容时默认采用的一套排版规则，规定了应该以何种方式排列元素 常见标准流排版规则： 块级元素：从上往下，垂直布局，独占一行 行内元素 或 行内块元素：从左往右，水平布局，空间不够自动折行 实际开发中，一个页面基本都包含了这三种布局方式（后面移动端学习新的布局方式） 11.2 浮动 11.2.1 浮动介绍 浮动的作用 早期的作用：图文环绕 现在的作用：网页布局，让垂直布局的盒子变成水平布局，如：一个在左，一个在右 属性名：float 属性值： 属性名 效果 left 左浮动 right 右浮动 浮动的特点 浮动元素会脱离标准流（简称：脱标），在标准流中不占位置 浮动元素比标准流高半个级别，可以覆盖标准流中的元素 浮动找浮动，下一个浮动元素会在上一个浮动元素后面左右浮动 浮动元素有特殊的显示效果：一行可以显示多个；可以设置宽高 浮动的元素是互相贴靠在一起的（不会有缝隙），如果父级宽度装不下这些浮动的盒子， 多出的盒子会另起一行对齐 浮动的元素不能通过 text-align:center 或者 margin:0 auto 进行居中 11.2.2 清除浮动 为什么需要清除浮动？ 由于父级盒子很多情况下，不方便给高度，但是子盒子浮动又不占有位置，最后父级盒子高度为 0 时，就会影响下面的标准流盒子 由于浮动元素不再占用原文档流的位置，所以它会对后面的元素排版产生影响 清除浮动本质 清除浮动的本质是清除浮动元素造成的影响 如果父盒子本身有高度，则不需要清除浮动 清除浮动之后，父级就会根据浮动的子盒子自动检测高度。父级有了高度，就不会影响下面的标准流了 清除浮动策略：闭合浮动，只让浮动在父盒子内部影响,不影响父盒子外面的其他盒子 11.2.3 清除浮动的方法 额外标签法 操作：在父元素内容的最后添加一个块级元素，然后给添加的块级元素设置 clear:both 缺点：会在页面中添加额外的标签，会让页面的HTML结构变得复杂 属性值 描述 left 不允许左侧有浮动元素（清除左侧浮动的影响) right 不允许右侧有浮动元素（清除右侧浮动的影响) both 同时清除左右两侧浮动的影响 单伪元素法 操作：给父元素添加clearfix类 优点：项目中使用，直接给标签加类即可清除浮动 .clearfix::after { content: \"\"; display: block; height: 0; clear: both; visibility: hidden; } 双伪元素法 操作：给父元素添加clearfix类 优点：项目中使用，直接给标签加类即可清除浮动 .clearfix::before,.clearfix::after { content:\"\"; display:table; } .clearfix::after { clear:both; } overflow 操作：可以给父级添加 overflow 属性，将其属性值设置为 hidden、 auto 或 scroll 优点：代码简洁 缺点：无法显示溢出的部分 11.3 定位 11.3.1 定位介绍 定位：将盒子定在某一个位置，所以定位也是在摆放盒子， 按照定位的方式移动盒子 定位的作用：定位是可以让盒子自由的在某个盒子内移动位置或者固定屏幕中某个位置，并且可以压住其他盒子 定位组成 定位 = 定位模式 + 边偏移 定位模式用于指定一个元素在文档中的定位方式。边偏移则决定了该元素的最终位置 定位模式决定元素的定位方式 ，它通过 CSS 的 position 属性来设置，其值可以分为四个 值 语义 static 静态定位 relative 相对定位 absolute 绝对定位 fixed 固定定位 边偏移就是定位的盒子移动到最终位置。有 top、bottom、left 和 right 4 个属性。当同时写了4个属性，只有left和top会生效 边偏移属性 示例 描述 top top: 80px 顶端偏移量，定义元素相对于其父元素上边线的距离 bottom bottom: 80px 底部偏移量，定义元素相对于其父元素下边线的距离。 left left: 80px 左侧偏移量，定义元素相对于其父元素左边线的距离 right right: 80px 右侧偏移量，定义元素相对于其父元素右边线的距离 11.3.2 静态定位 static 静态定位是元素的默认定位方式，无定位的意思 语法：position: static; 静态定位按照标准流特性摆放位置，它没有边偏移，静态定位在布局时很少用到 11.3.3 相对定位 relative 相对定位是元素在移动位置的时候，是相对于它原来的位置来说的 语法：position: relative; 相对定位的特点 它是相对于自己原来的位置来移动的（移动位置的时候参照点是自己原来的位置） 原来在标准流的位置继续占有，后面的盒子仍然以标准流的方式对待它 11.3.4 绝对定位 absolute 绝对定位是元素在移动位置的时候，是相对于它祖先元素来说的 语法：position: absolute; 绝对定位的特点 如果没有祖先元素或者祖先元素没有定位，则以浏览器为准定位 如果祖先元素有定位（相对、绝对、固定定位），则以最近一级的有定位祖先元素为参考点移动位置 绝对定位不再占有原先的位置（脱标） 绝对定位的盒子居中 加了绝对定位的盒子不能通过 margin:0 auto 水平居中，但是可以通过以下计算方法实现水平和垂直居中 left: 50%;：让盒子的左侧移动到父级元素的水平中心位置 margin-left: -100px;：让盒子向左移动自身宽度的一半 11.3.5 子绝父相 子绝父相：子级是绝对定位的话，父级要用相对定位 子绝父相的由来： 子级绝对定位，不会占有位置，可以放到父盒子里面的任何一个地方，不会影响其他的兄弟盒子 父盒子需要加定位限制子盒子在父盒子内显示 父盒子布局时，需要占有位置，因此父亲只能是相对定位 总结： 因为父级需要占有位置，因此是相对定位， 子盒子不需要占有位置，则是绝对定位。当然，子绝父相不是永远不变的，如果父元素不需要占有位置，子绝父绝也会遇到 11.3.6 固定定位 fixed 固定定位是元素固定于浏览器可视区的位置。主要使用场景： 可以在浏览器页面滚动时元素的位置不会改变 语法：position: fixed; 固定定位的特点 以浏览器的可视窗口为参照点移动元素 固定定位不在占有原先的位置（脱标） 11.3.7 粘性定位 sticky 粘性定位可以被认为是相对定位和固定定位的混合 语法：position: sticky; 粘性定位的特点 以浏览器的可视窗口为参照点移动元素（固定定位特点） 粘性定位占有原先的位置（相对定位特点） 必须添加 top 、left、right、bottom 其中一个才有效 跟页面滚动搭配使用。 兼容性较差，IE 不支持 11.4 元素的层级关系 元素层级问题 不同布局方式元素的层级关系：标准流 不同定位之间的层级关系： 相对、绝对、固定默认层级相同 此时HTML中写在下面的元素层级更高，会覆盖上面的元素 更改定位元素的层级 语法：选择器 { z-index: 1; } 属性值：数字 数值可以是正整数、负整数或 0, 默认是 auto，数值越大，盒子越靠上 如果属性值相同，则按照书写顺序，后来居上 数字后面不能加单位 只有定位的盒子才有 z-index 属性 "},"article/12-CSS装饰.html":{"url":"article/12-CSS装饰.html","title":"12 CSS 装饰","keywords":"","body":"12 CSS 装饰 12.1 垂直对齐方式 认识基线 基线：浏览器文字类型元素排版中存在用于对齐的基线（baseline） 文字对齐问题 场景：解决行内/行内块元素垂直对齐问题 问题：当图片和文字在一行中显示时，其实底部不是对齐的 垂直对齐方式 属性名：vertical-align 属性值： 属性值 效果 baseline 默认，基线对齐 top 顶部对齐 middle 中部对齐 bottom 底部对齐 项目中 vertical-align 可以解决的问题 文本框和表单按钮无法对齐问题 input和img无法对齐问题 div中的文本框，文本框无法贴顶问题 div不设高度由img标签撑开，此时img标签下面会存在额外间隙问题 使用line-height让img标签垂直居中问题 注意点： 学习浮动之后，不推荐使用行内块元素让div一行中显示，因为可能会出现垂直对齐问题 推荐优先使用浮动完成效果 12.2 光标类型式 场景：设置鼠标光标在元素上时显示的样式 属性名：cursor 常见属性值： 属性值 效果 default 默认值，通常是箭头 pointer 小手效果，提示用户可以点击 text 工字型，提示用户可以选择文字 move 十字光标，提示用户可以移动 12.3 边框圆角 场景：让盒子四个角变得圆润，增加页面细节，提升用户体验 属性名：border-radius 常见取值：数字+px 、百分比 原理： 赋值规则：从左上角开始赋值，然后顺时针赋值，没有赋值的看对角！ 边框圆角的常见应用 画一个正圆： 盒子必须是正方形 设置边框圆角为盒子宽高的一半 → border-radius:50% 胶囊按钮： 盒子要求是长方形 设置 → border-radius：盒子高度的一半 12.4 溢出部分显示效果 溢出部分：指的是盒子 内容部分 所超出盒子范围的区域 场景：控制内容溢出部分的显示效果，如：显示、隐藏、滚动条...... 属性名：overflow 常见属性值： 属性值 效果 visible 默认值，溢出部分可见 hidden 溢出部分隐藏 scroll 无论是否溢出，都显示滚动条 auto 根据是否溢出，自动显示或隐藏滚动条 12.5 元素本身隐藏 场景：让某元素本身在屏幕中不可见，鼠标悬停之后元素显示 常见属性： visibility：hidden display：none 区别： visibility：hidden 隐藏元素本身，并且在网页中 占位置 display：none 隐藏元素本身，并且在网页中 不占位置 注意点： 开发中经常会通过 display属性完成元素的显示隐藏切换 display：none；（隐藏）、 display：block；（显示） 12.6 元素整体透明度 场景：让某元素整体（包括内容）一起变透明 属性名：opacity 属性值：0~1之间的数字 1：表示完全不透明 0：表示完全透明 注意点：opacity会让元素整体透明，包括里面的内容，如：文字、子元素等..... 12.7 表格边框合并 场景：让相邻表格边框进行合并，得到细线边框效果 代码：border-collapse：collapse；（给table标签添加） table { border: 1px solid #000; /* 注意: 一定要加给table标签 : 做细线表格 */ border-collapse: collapse; } th, td { border: 1px solid #000; } 12.8 画三角形 场景：在网页中展示出小三角形时，除了可以使用图片外，还可以使用代码完成。 实现原理：利用盒子边框完成 实现步骤： 设置一个盒子 设置四周不同颜色的边框 将盒子宽高设置为0，仅保留边框 得到四个三角形，选择其中一个后，其他三角形（边框）设置颜色为透明 div { /* width: 100px; */ /* height: 100px; */ width: 0; height: 0; /* background-color: pink; */ /* transparent: 透明 */ border-top: 10px solid transparent; border-right: 10px solid transparent; border-bottom: 10px solid transparent; border-left: 10px solid orange; } "},"article/13-CSS样式补充.html":{"url":"article/13-CSS样式补充.html","title":"13 CSS 样式补充","keywords":"","body":"13 CSS样式补充 13.1 精灵图 场景：项目中将多张小图片，合并成一张大图片，这张大图片称之为精灵图 优点：减少服务器发送次数，减轻服务器的压力，提高页面加载速度 例如：需要在网页中展示8张小图片 8张小图片分别发送 → 发送8次 合成一张精灵图发送 → 发送1次 精灵图的使用步骤 创建一个盒子 通过PxCook量取小图片大小，将小图片的宽高设置给盒子 将精灵图设置为盒子的背景图片 通过PxCook测量小图片左上角坐标，分别取负值设置给盒子的background-position：x y span { display: inline-block; width: 18px; height: 24px; background-color: pink; background-image: url(./images/taobao.png); /* 背景图位置属性: 改变背景图的位置 */ /* 水平方向位置 垂直方向的位置 */ /* 想要向左侧移动图片, 位置取负数; */ background-position: -3px 0; } b { display: block; width: 25px; height: 21px; background-color: green; background-image: url(./images/taobao.png); background-position: 0 -90px; } 13.2 背景图片大小 作用：设置背景图片的大小， 语法：background-size：宽度 高度； 取值： 取值 场景 数字+px 简单方便，常用 百分比 相对于当前盒子自身的宽高百分比 contain 包含，将背景图片等比例缩放，直到不会超出盒子的最大 cover 覆盖，将背景图片等比例缩放，直到刚好填满整个盒子没有空白 .box { width: 400px; height:300px; background-color: pink; background-image: url(./images/1.jpg); background-repeat: no-repeat; /* background-size: 300px; */ /* background-size: 50%; */ /* 如果图的宽或高与盒子的尺寸相同了, 另一个方向停止缩放 -- 导致盒子可能有留白 */ background-size: contain; /* 保证宽或高和盒子尺寸完全相同 , 导致图片显示不全 */ background-size: cover; /* 工作中, 图的比例和盒子的比例都是相同的, contain 和cover效果完全相同; */ } background连写拓展：background: color image repeat position/size; 13.3 文字阴影 作用：给文字添加阴影效果，吸引用户注意 属性名：text-shadow 取值： 参数 作用 h-shadow 必须，水平偏移量。允许负值 v-shadow 必须，垂直偏移量。允许负值 blur 可选，模糊度 color 可选，阴影颜色 拓展：阴影可以叠加设置，每组阴影取值之间以逗号隔开 13.4 盒子阴影 作用：给盒子添加阴影效果，吸引用户注意，体现页面的制作细节 属性名：box-shadow 取值： 参数 作用 h-shadow 必须，水平偏移量。允许负值 v-shadow 必须，垂直偏移量。允许负值 blur 可选，模糊度 spread 可选，阴影扩大 color 可选，阴影颜色 inset 可选，将阴影改为内部阴影 .box { width: 200px; height: 200px; background-color: pink; box-shadow: 5px 10px 20px 10px green inset; /* 注意: 外阴影, 不能添加outset, 添加了会导致属性报错 */ /* box-shadow: 5px 10px 20px 10px green outset; */ } 13.5 过渡 作用：让元素的样式慢慢的变化，常配合hover使用，增强网页交互体验 属性名：transition 常见取值： 参数 取值 过渡的属性 all:所有能过渡的属性都过渡、(具体属性名如: width:只有width有过渡 过渡的时长 数字+s(秒) 注意点： 过渡需要：默认状态 和 hover状态样式不同，才能有过渡效果 transition属性给需要过渡的元素本身加 transition属性设置在不同状态中，效果不同的 给默认状态设置，鼠标移入移出都有过渡效果 给hover状态设置，鼠标移入有过渡效果，移出没有过渡效果 /* 过渡配合hover使用, 谁变化谁加过渡属性 */ .box { width: 200px; height: 200px; background-color: pink; /* 宽度200, 悬停的时候宽度600, 花费1秒钟 */ /* transition: width 1s, background-color 2s; */ /* 如果变化的属性多, 直接写all,表示所有 */ transition: all 1s; } .box:hover { width: 600px; background-color: red; } "},"article/14-项目知识.html":{"url":"article/14-项目知识.html","title":"14 项目知识","keywords":"","body":"14 项目知识 14.1 项目前置认知 14.1.1 SEO三大标签 SEO简介 SEO（Search Engine Optimization）：搜索引擎优化 作用：让网站在搜索引擎上的排名靠前 提升SEO的常见方法： 竞价排名 将网页制作成html后缀 标签语义化（在合适的地方使用合适的标签） ...... SEO三大标签 title：网页标题标签 description：网页描述标签 keywords：网页关键词标签 京东(JD.COM)-正品低价、品质保障、配送及时、轻松购物！ 14.1.2 ico图标设置 14.1.3 版心 场景：把页面的主体内容约束在网页中间 作用：让不同大小的屏幕都能看到页面的主体内容 代码： /*版心*/ .container { width: 1240px; margin: 0 auto; } 注意点：版心类名常用：container、wrapper、w 等 14.1.4 CSS书写顺序 衡量程序员的能力，除了要看实现业务需求的能力，还要看平时书写代码的规范（专业性） 不同的CSS书写顺序会影响浏览器的渲染性能，推荐前端工程师使用专业的书写顺序习惯 顺序 类别 属性 1 布局属性 display 、position 、 float 、 clear visibility 、 overflow 2 盒子模型+背景 width 、 height 、 margin padding 、 border 、 background 3 文本内容属性 color 、 font 、text-decoration text-align 、 line-height 4 点缀属性 cursor 、border-radius text-shadow 、 box-shadow 注意点：开发中推荐多用类 + 后代，但不是层级越多越好，一个选择器中的类选择器的个数推荐 不要超过 3 个 14.2 项目结构搭建 14.2.1 文件和目录准备 新建项目文件夹 xtx-pc-client，在VScode中打开 在实际开发中，项目文件夹不建议使用中文 所有项目相关文件都保存在 xtx-pc-client 目录中 复制 favicon.ico 到 xtx-pc-client 目录 一般习惯将ico图标放在项目根目录 复制 images 和 uploads 目录到 xtx-pc-client 目录中 images ：存放网站 固定使用 的图片素材，如：logo、样式修饰图片... 等 uploads：存放网站 非固定使用 的图片素材，如：商品图片、宣传图片...等 新建 index.html 在根目录 新建 css 文件夹保存网站的样式，并新建以下CSS文件： base.css：基础公共样式 common.css：该网站中多个网页相同模块的重复样式，如：头部、底部 index.css：首页样式 14.2.2 基础公共样式 场景：一般项目开始前，首先会 去除掉浏览器默认样式，设置为 当前项目需要的初始化样式 作用：防止不同浏览器中标签默认样式不同的影响，统一不同浏览器的默认显示效果，方便后续项目开发 要求：已经准备好base.css代码，同学们需要认识，项目中可以直接引入使用 14.2.3 index页面骨架 小兔鲜儿-新鲜、惠民、快捷！ "}}